@model WebApplicationCTDEO.Models.Aluno

<div class="form-group col-md-10" align="center">
    <div>
        <img src="~/Content/pictures/fakepicture.jpg" style="display:block" />
        <button>Inserir Foto</button>
    </div>
</div>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group col-md-10">
    @Html.LabelFor(model => model.Nome, "Nome *", htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-6">
            @if (Model.DatadeNascimento.Equals(""))
            {
                @Html.LabelFor(model => model.DatadeNascimento, "Data de nascimento *", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DatadeNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatadeNascimento, "", new { @class = "text-danger" })
            }
            else
            {
                <input type="text" value="@Model.DatadeNascimento" name="DatadeNascimento" class="form-control"/>
            }
        </div>
        <div class="col-6">
            @Html.LabelFor(model => model.Genero, "Gênero *", htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Genero, "--Selecione--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group col-md-10">
    @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @id = "CPF", @maxlength = "11", @pattern = ".{11,11}", @title = "O CPF deve conter 11 dígitos" } })
    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-4">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", @id = "RG", @maxlength = "20" } })
            @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.OrgaoExp, "Órgão expedidor", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.OrgaoExp, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.OrgaoExp, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @if (Model.DatadeExp.Equals(""))
            {
                @Html.LabelFor(model => model.DatadeExp, "Data de Expedição", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DatadeExp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatadeExp, "", new { @class = "text-danger" })
            }
            else
            {
                <input type="text" value="@Model.DatadeExp" name="DatadeExp" class="form-control" />
            }
        </div>
    </div>
</div>

<div class="form-group col-md-10">
    @Html.LabelFor(model => model.Endereco, "Endereço *", htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
    @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-4">
            @Html.LabelFor(model => model.Numero, "Número", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.CEP, "CEP *", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @maxlength = "8", @id = "CEP", @pattern = ".{5,8}", @title = "O CEP deve conter pelo menos 5 dígitos" } })
            @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-4">
            @Html.LabelFor(model => model.Municipio, "Município", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Bairro, "Bairro *", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Comunidade, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Comunidade, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.Comunidade, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-6">
            @Html.LabelFor(model => model.TelefoneResidencial, "Telefone Residencial", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.TelefoneResidencial, new { htmlAttributes = new { @class = "form-control", @id = "TelRes", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.TelefoneResidencial, "", new { @class = "text-danger" })
        </div>
        <div class="col-6">
            @Html.LabelFor(model => model.Celular, "Celular *", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", @id = "Cel" } })
            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<h4 class="col-md-10 text-center">Informações Escolares</h4>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-6">
            @Html.LabelFor(model => model.InstituicaodeEnsino, "Instituição de Ensino", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.InstituicaodeEnsino, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.InstituicaodeEnsino, "", new { @class = "text-danger" })
        </div>

        <div class="col-6">
            @Html.LabelFor(model => model.RededeEnsino, "Pública ou privada?", htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.RededeEnsino, "--Selecione--", htmlAttributes: new { @class = "form-control", @id = "tipoInst" })
            @Html.ValidationMessageFor(model => model.RededeEnsino, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<!--Só deve aparecer caso a instituição seja pública-->
<div class="form-group col-md-10" id="RegAdm">
    <div class="row">
        <div class="col-6">
            @Html.LabelFor(model => model.SistemadeEnsino, "Qual é o sistema de ensino da instituição?", htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.SistemadeEnsino, "--Selecione--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SistemadeEnsino, "", new { @class = "text-danger" })
        </div>

        <div class="col-6">
            @Html.LabelFor(model => model.RegiaoAdministrativa, "Região Administrativa", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.RegiaoAdministrativa, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.RegiaoAdministrativa, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-4" id="bolsa">
            @Html.LabelFor(model => model.BolsadeEstudos, "Possui bolsa de estudos?", htmlAttributes: new { @class = "control-label" })
            <div class="checkbox">
                @Html.EditorFor(model => model.BolsadeEstudos)
                @Html.ValidationMessageFor(model => model.BolsadeEstudos, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Serie, "Ano Escolar", htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Serie, "--Selecione--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Serie, "", new { @class = "text-danger" })
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Turno, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Turno, "--Selecione--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Turno, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<h4 class="col-md-10 text-center">Perfil CTDEO</h4>

<div class="form-group col-md-10">
    @Html.LabelFor(model => model.Procedencia, "Procedência", htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Procedencia, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
    @Html.ValidationMessageFor(model => model.Procedencia, "", new { @class = "text-danger" })
</div>

<div class="form-group col-md-10">
    @Html.LabelFor(model => model.Transporte, "Transporte utilizado para vir até a instituição", htmlAttributes: new { @class = "control-label" })
    @Html.EnumDropDownListFor(model => model.Transporte, "--Selecione--", htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Transporte, "", new { @class = "text-danger" })
</div>

<div class="form-group col-md-10">
    <div class="row">
        <div class="col-6">
            @Html.LabelFor(model => model.RegistroFed, "Registro da Federação", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.RegistroFed, new { htmlAttributes = new { @class = "form-control", @onkeyup = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.RegistroFed, "", new { @class = "text-danger" })
        </div>
        <div class="col-6">
            @Html.LabelFor(model => model.TipodeBolsaAtleta, "Tipo de bolsa atleta", htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.TipodeBolsaAtleta, "--Selecione--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipodeBolsaAtleta, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<h4 class="col-md-10 text-center">Escolha de turma para o aluno (opcional)</h4>
<div class="form-group col-md-10">
    <!--Escolha de modalidade-->
    @{ var turmas = (List<WebApplicationCTDEO.Models.Turma>)ViewData["Turmas"];
        var modalidades = (List<WebApplicationCTDEO.Models.Modalidade>)ViewData["Modalidades"]; }
        
    <table class="table">
        <tr>
            <th>
                Código da turma
            </th>

            <th>
                Modalidade
            </th>

            <th>
                Dias da Semana
            </th>
            <th>
                Horário
            </th>
        </tr>

        @foreach (var item in turmas)
        {
            var modturma = modalidades.Where(m => m.ModalidadeId == item.ModalidadeId).Select(m => m.Nome).ToList().FirstOrDefault().ToString();


            <tr id="@item.TurmaId">
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @modturma
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dias)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Horario)
                </td>
            </tr>
        }

    </table>
</div>

<div>
    @Html.EditorFor(model => model.IdsdeTurmas, new { htmlAttributes = new { @class = "form-control" } })
</div>

<input type="text" value="@Model.AlunoId" name="AlunoId" hidden />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="~/Scripts/Aluno.js"></script>

<!--onclick="window.location.href = '@Url.Action("Create", "Modalidades")';"-->
<!--<button type="button" class="fa fa-plus btn btn-outline-info btn-lg" data-toggle="tooltip" data-placement="bottom" title="Cadastrar nova modalidade"></button>-->